<!-- THIS IS IMPORTANT. THIS IS HOW THE VIEW SEES THE MODEL we write the fully qualified
  namespace for the sciFiBook model class. This is weird because we seem to be skipping the Controller class
  and referencing a model directly-->
@model Tree_House_MVC_Version_4.Models.SciFiBook

@{
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- his right here ^^ above is "Razor" bit that combines C# and HTML it is c# -->
<!-- This is C# code setting the layout property to null the layout page is the overall look and feel for the site-->
<!-- To get files inn we add them through file explorer hit "view all files" then right click and "add to project"-->
<!-- I fucked up the start path so we need to enter this http://localhost:53780/SciFi/Detail -->
<!DOCTYPE html>

<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title></title>
</head>
<body>
  <div>
    <h2>
      <!--We are just calling c# vars herer-->
      Name of Book2:
    </h2>
    <h5>
      <div>@Model.Title </div>
    </h5>
    <h2>
      Description of Book2:
    </h2>
    <h5>
      <div> @Html.Raw(Model.DescriptionHtml) </div>
    </h5>
    <!-- The HTML.Raw tab forces the browser to render the content -->

    @if (Model.Characters.Length > 0)
    { <!--Looks like we can just throw an if statement in.-->

      <h2>
        Characters from Book:
      </h2>
      <ul>
        @foreach (var character in Model.Characters)
        {
          <li><h5>@character.Name: @character.CharacterSketch </h5> </li>
        }
        <!--The text element lets Razor know we are switchging back to html -->
        <!--The the "li" = line item seems you don't really need the "Ul" tags.-->
      </ul>
    }
  </div>
  <img src="~/Images/@Model.CoverImageFileName">
</body>
</html>
